function [x_P_new, y_P_new, x_est, y_est, x_P_update, y_P_update] =particle_filter(x_P,y_P,N,x_vec_all_1,x_vec_all_k,h_0,P_r_filt_ratio,x_state,P_cov_ini,Q_KF,R_KF)

x_N=Q_KF(1,1);
y_N=Q_KF(2,2);
x_R=R_KF;

% x_vec_all_1,x_vec_all_k,h_0 only for h
%P_r_filt_ratio for the measurement update

% Update the particles
for i = 1:N % N is the total number of particles
    %update model to make a new set of transitioned particles.
    %x(k)=x(k-1)+u
    x_P_update(i) = x_P(i) + sqrt(x_N)*randn;
    y_P_update(i) = y_P(i) + sqrt(y_N)*randn;

    %with these new updated particle locations, update the observations
    %for each of these particles.
    z_update(i) = hk(x_vec_all_1,x_vec_all_k,x_P_update(i),y_P_update(i),h_0);
    P_w(i) = (1/sqrt(2*pi*x_R)) * exp(-(P_r_filt_ratio - z_update(i))^2/(2*x_R));
end

    % Normalize to form a probability distribution (i.e. sum to 1).
    P_w = P_w./sum(P_w);
    
% Resampling: From this new distribution, now we randomly sample from it to generate our new estimate particles
    
    %what this code specifically does is randomly, uniformally, sample from
    %the cummulative distribution of the probability distribution
    %generated by the weighted vector P_w.  If you sample randomly over
    %this distribution, you will select values based upon there statistical
    %probability, and thus, on average, pick values with the higher weights
    %(i.e. high probability of being correct given the observation z).
    %store this new value to the new estimate which will go back into the
    %next iteration
%     for i = 1 : N
%         x_P(i) = x_P_update(find(rand <= cumsum(P_w),1));
%         y_P(i) = y_P_update(find(rand <= cumsum(P_w),1));
%     end

    %Resampling procedure - new way
weight=cumsum(P_w);
addit=1/N;
stt=addit*rand(1);
selection_points=[stt : addit : stt+(N-1)*addit]; 
j=1;
for i=1:N
    while selection_points(i)>weight(j);
        j=j+1;
    end
    x_P_new(i)=x_P_update(j);
    y_P_new(i)=y_P_update(j);
end

    %The final estimate is some metric of these final resampling, such as
    %the mean value or variance
    x_est = mean(x_P_new);
    y_est = mean(y_P_new);
    
% Measurement function with x_P the particles state (= x and y position)
function h=hk(x_vec_all_1,x_vec_all_k,x_P,y_P,h_0)
a=x_P;
b=y_P;
c=x_vec_all_1(1);
d=x_vec_all_1(2);
e=x_vec_all_k(1);
f=x_vec_all_k(2);

h=[((a-c)^2+(b-d)^2+(h_0)^2)/((a-e)^2+(b-f)^2+(h_0)^2)];
